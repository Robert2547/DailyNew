version: "3.8"

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=DailyDB
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d DailyDB"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth_service:
    build:
      context: ./AuthService
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/DailyDB
      - SECRET_KEY=${SECRET_KEY}
      - USER_SERVICE_URL=http://user_service:8002
    volumes:
      - ./AuthService:/app
    depends_on:
      postgres:
        condition: service_healthy

  user_service:
    build:
      context: ./UserService
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/DailyDB
      - AUTH_SERVICE_URL=http://auth_service:8001
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./UserService:/app
    depends_on:
      postgres:
        condition: service_healthy
      auth_service:
        condition: service_started

  watchlist_service:
    build:
      context: ./Watchlist
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/DailyDB
      - AUTH_SERVICE_URL=http://auth_service:8001
      - USER_SERVICE_URL=http://user_service:8002
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./Watchlist:/app
    depends_on:
      postgres:
        condition: service_healthy
      auth_service:
        condition: service_started
      user_service:
        condition: service_started

volumes:
  postgres_data: {}